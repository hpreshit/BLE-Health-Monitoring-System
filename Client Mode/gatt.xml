<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--Custom BLE GATT--><gatt generic_attribute_service="true" header="gatt_db.h" name="Custom BLE GATT" out="gatt_db.c" prefix="gattdb_">
  
  <!--Generic Access-->
  <service advertise="true" name="Generic Access" requirement="mandatory" sourceId="org.bluetooth.service.generic_access" type="primary" uuid="1800">
    <informativeText>Abstract: The generic_access service contains generic information about the device. All available Characteristics are readonly. </informativeText>
    
    <!--Device Name-->
    <characteristic id="device_name" name="Device Name" sourceId="org.bluetooth.characteristic.gap.device_name" uuid="2A00">
      <informativeText/>
      <value length="13" type="utf-8" variable_length="false">ThermoHW3</value>
      <properties read="true" read_requirement="optional" write="true" write_requirement="optional"/>
    </characteristic>
    
    <!--Appearance-->
    <characteristic name="Appearance" sourceId="org.bluetooth.characteristic.gap.appearance" uuid="2A01">
      <informativeText>Abstract: The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits). </informativeText>
      <value length="2" type="hex" variable_length="false">0000</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
    </characteristic>
  </service>
  
  <!--Device Information-->
  <service advertise="false" name="Device Information" requirement="mandatory" sourceId="org.bluetooth.service.device_information" type="primary" uuid="180A">
    <informativeText>Abstract: The Device Information Service exposes manufacturer and/or vendor information about a device. Summary: This service exposes manufacturer information about a device. The Device Information Service is instantiated as a Primary Service. Only one instance of the Device Information Service is exposed on a device. </informativeText>
    
    <!--Manufacturer Name String-->
    <characteristic name="Manufacturer Name String" sourceId="org.bluetooth.characteristic.manufacturer_name_string" uuid="2A29">
      <informativeText>Abstract: The value of this characteristic is a UTF-8 string representing the name of the manufacturer of the device. </informativeText>
      <value length="12" type="utf-8" variable_length="false">Silicon Labs</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
    </characteristic>
    
    <!--Model Number String-->
    <characteristic name="Model Number String" sourceId="org.bluetooth.characteristic.model_number_string" uuid="2A24">
      <informativeText>Abstract: The value of this characteristic is a UTF-8 string representing the model number assigned by the device vendor. </informativeText>
      <value length="10" type="utf-8" variable_length="false">Blue Gecko</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
    </characteristic>
    
    <!--System ID-->
    <characteristic name="System ID" sourceId="org.bluetooth.characteristic.system_id" uuid="2A23">
      <informativeText>Abstract: The SYSTEM ID characteristic consists of a structure with two fields. The first field are the LSOs and the second field contains the MSOs.       This is a 64-bit structure which consists of a 40-bit manufacturer-defined identifier concatenated with a 24 bit unique Organizationally Unique Identifier (OUI). The OUI is issued by the IEEE Registration Authority (http://standards.ieee.org/regauth/index.html) and is required to be used in accordance with IEEE Standard 802-2001.6 while the least significant 40 bits are manufacturer defined.       If System ID generated based on a Bluetooth Device Address, it is required to be done as follows. System ID and the Bluetooth Device Address have a very similar structure: a Bluetooth Device Address is 48 bits in length and consists of a 24 bit Company Assigned Identifier (manufacturer defined identifier) concatenated with a 24 bit Company Identifier (OUI). In order to encapsulate a Bluetooth Device Address as System ID, the Company Identifier is concatenated with 0xFFFE followed by the Company Assigned Identifier of the Bluetooth Address. For more guidelines related to EUI-64, refer to http://standards.ieee.org/develop/regauth/tut/eui64.pdf. Examples: If the system ID is based of a Bluetooth Device Address with a Company Identifier (OUI) is 0x123456 and the Company Assigned Identifier is 0x9ABCDE, then the System Identifier is required to be 0x123456FFFE9ABCDE. </informativeText>
      <value length="6" type="hex" variable_length="false">000102030405</value>
      <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
    </characteristic>
  </service>
  
  <!--Silicon Labs OTA-->
  <service advertise="false" name="Silicon Labs OTA" requirement="mandatory" sourceId="com.silabs.service.ota" type="primary" uuid="1D14D6EE-FD63-4FA1-BFA4-8F47B42119F0">
    <informativeText>Abstract: The Silicon Labs OTA Service enables over-the-air firmware update of the device. </informativeText>
    
    <!--Silicon Labs OTA Control-->
    <characteristic id="ota_control" name="Silicon Labs OTA Control" sourceId="com.silabs.characteristic.ota_control" uuid="F7BF3564-FB6D-4E53-88A4-5E37E0326063">
      <informativeText>Abstract: Silicon Labs OTA Control. </informativeText>
      <value length="1" type="user" variable_length="false"/>
      <properties write="true" write_requirement="optional"/>
    </characteristic>
  </service>
  
  <!--Heart Rate-->
  <service advertise="false" id="heart_rate" name="Heart Rate" requirement="mandatory" sourceId="org.bluetooth.service.heart_rate" type="primary" uuid="180D">
    <informativeText>Abstract:  This service exposes heart rate and other data from a Heart Rate Sensor intended for fitness applications.  Summary:  The HEART RATE Service exposes heart rate and other data related to a heart rate sensor intended for fitness applications.  </informativeText>
    
    <!--Heart Rate Measurement-->
    <characteristic id="heart_rate_measurement" name="Heart Rate Measurement" sourceId="org.bluetooth.characteristic.heart_rate_measurement" uuid="2A37">
      <informativeText/>
      <value length="8" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="true" notify_requirement="mandatory" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_2" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
    
    <!--Body Sensor Location-->
    <characteristic id="body_sensor_location" name="Body Sensor Location" sourceId="org.bluetooth.characteristic.body_sensor_location" uuid="2A38">
      <informativeText/>
      <value length="1" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="true" read_requirement="mandatory" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
    </characteristic>
    
    <!--Heart Rate Control Point-->
    <characteristic id="heart_rate_control_point" name="Heart Rate Control Point" sourceId="org.bluetooth.characteristic.heart_rate_control_point" uuid="2A39">
      <informativeText/>
      <value length="1" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="true" write_no_response="false" write_no_response_requirement="excluded" write_requirement="mandatory"/>
    </characteristic>
  </service>
  
  <!--Pulse Oximeter Service-->
  <service advertise="false" id="pulse_oximeter" name="Pulse Oximeter Service" requirement="mandatory" sourceId="org.bluetooth.service.pulse_oximeter" type="primary" uuid="1822">
    <informativeText>Abstract:  This Service specification proposes a pulse oximetry server for use in consumer and professional healthcare applications.  Summary:  The Pulse Oximeter Service exposes pulse oximetry data related to a non-invasive pulse oximetry sensor for consumer and professional healthcare applications.  </informativeText>
    
    <!--PLX Spot-Check Measurement-->
    <characteristic id="plx_spot_check_measurement" name="PLX Spot-Check Measurement" sourceId="org.bluetooth.characteristic.plx_spot_check_measurement" uuid="2A5E">
      <informativeText>Summary:  The PLX Spot-check Measurement characteristic, if supported, is used to send Spot-check measurements of SpO2 (Percent oxygen saturation of hemoglobin) and PR (pulse rate). This characteristic is a variable length structure containing the Flags field, the SpO2PR-Spot-Check field, and depending on the contents of the Flags field, the Timestamp field, the Measurement Status field, the Device and Sensor Status field, and/or the Pulse Amplitude Index field.  </informativeText>
      <value length="19" type="hex" variable_length="false"/>
      <properties indicate="true" indicate_requirement="mandatory" notify="false" notify_requirement="excluded" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_3" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
    
    <!--PLX Continuous Measurement-->
    <characteristic id="plx_continuous_measurement" name="PLX Continuous Measurement" sourceId="org.bluetooth.characteristic.plx_continuous_measurement" uuid="2A5F">
      <informativeText>Summary:  The PLX Continuous Measurement characteristic, if supported, is used to send periodic pulse oximetry measurements. This characteristic is a variable length structure containing the Flags field (to indicate presence of optional fields), the SpO2PR-Normal field, and depending on the contents of the Flags field, the SpO2PR-Fast field, the SpO2PR-Slow field, the Measurement Status field, the Device and Sensor Status field, and/or the Pulse Amplitude Index field.  </informativeText>
      <value length="20" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="true" notify_requirement="mandatory" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_4" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
    
    <!--PLX Features-->
    <characteristic id="plx_features" name="PLX Features" sourceId="org.bluetooth.characteristic.plx_features" uuid="2A60">
      <informativeText>Summary:  The PLX Features characteristic is used to describe the supported features of the Server. Included in the characteristic is a PLX Features field, and, depending on the contents of the PLX Features field, the Measurement Status Support field, and the Device and Sensor Status Support field.  </informativeText>
      <value length="7" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="true" read_requirement="mandatory" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
    </characteristic>
    
    <!--Record Access Control Point-->
    <characteristic id="record_access_control_point" name="Record Access Control Point" sourceId="org.bluetooth.characteristic.record_access_control_point" uuid="2A52">
      <informativeText>Summary:  This control point is used with a service to provide basic management functionality for the Glucose Sensor patient record database. This enables functions including counting records, transmitting records and clearing records based on filter criterion. The filter criterion in the Operand field is defined by the service that references this characteristic as is the format of a record (which may be comprised of one or more characteristics) and the sequence of transferred records.  </informativeText>
      <value length="2" type="hex" variable_length="true"/>
      <properties indicate="true" indicate_requirement="mandatory" notify="false" notify_requirement="excluded" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="true" write_no_response="false" write_no_response_requirement="excluded" write_requirement="mandatory"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_5" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
  </service>
  
  <!--Alert Notification Service-->
  <service advertise="false" id="alert_notification" name="Alert Notification Service" requirement="mandatory" sourceId="org.bluetooth.service.alert_notification" type="primary" uuid="1811">
    <informativeText>Abstract:  Alert Notification service exposes:             - The different types of alerts with the short text messages.             - The information how many count of new alert messages.             - The information how many count of unread alerts.  Summary:  The Alert Notification service exposes alert information in a device.  This information includes the following:             - Type of alert occuring in a device.             - Additional text information such as caller ID or sender ID             - Count of new alerts.             - Count of unread alert items.  </informativeText>
    
    <!--Supported New Alert Category-->
    <characteristic id="supported_new_alert_category" name="Supported New Alert Category" sourceId="org.bluetooth.characteristic.supported_new_alert_category" uuid="2A47">
      <informativeText>Abstract:  Category that the server supports for new alert.  Summary:  This characteristic uses the Alert Category ID Bit Mask Characteristic.  If bit(s) is/are set, it means the server supports the corresponded categories for new incoming alert.  Examples:  The value 0x0a is interpreted that this server supports "Call" and "Email" categories.  </informativeText>
      <value length="2" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="true" read_requirement="mandatory" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
    </characteristic>
    
    <!--New Alert-->
    <characteristic id="new_alert" name="New Alert" sourceId="org.bluetooth.characteristic.new_alert" uuid="2A46">
      <informativeText>Abstract:  This characteristic defines the category of the alert and how many new alerts of that category have occurred in the server device. Brief text information may also be included for the last alert in the category.  Summary:  This characteristic consists of "Category ID", "uint8", and "UTF-8 string" fields. The size of this characteristic is dynamic because of the variable length text ("UTF-8") field. The minimum length of "UTF-8 string" is 0 octets and maximum length of "UTF-8 string" is 18 octets.  Examples:  The value 0x03, 0x04, 0x52, 0x69, 0x63, 0x68, 0x61, 0x72, 0x64 are interpreted that the server has 4 new email messages and the last message was sent by "Richard".  </informativeText>
      <value length="3" type="utf-8" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="true" notify_requirement="mandatory" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_6" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
    
    <!--Supported Unread Alert Category-->
    <characteristic id="supported_unread_alert_category" name="Supported Unread Alert Category" sourceId="org.bluetooth.characteristic.supported_unread_alert_category" uuid="2A48">
      <informativeText>Abstract:  Category that the server supports for unread alert.  Summary:  This characteristic uses the Alert Category ID Bit Mask Characteristic.  If bit(s) is/are set, it means the server supports the corresponded categories for unread alert.  Examples:  The value 0x03 is interpreted that this server supports "Simple Alert" and "Email" categories for unread alert.  </informativeText>
      <value length="2" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="true" read_requirement="mandatory" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
    </characteristic>
    
    <!--Unread Alert Status-->
    <characteristic id="unread_alert_status" name="Unread Alert Status" sourceId="org.bluetooth.characteristic.unread_alert_status" uuid="2A45">
      <informativeText>Abstract:  This characteristic shows how many numbers of unread alerts exist in the specific category in the device.  Summary:  This characteristic consists of "Category ID" and "uint8" which shows the number of unread alerts/messages.  Examples:  The value 0x01, 0x04 are interpreted that the server has 4 unread messages in Email category.  </informativeText>
      <value length="2" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="true" notify_requirement="mandatory" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="false" write_no_response_requirement="excluded" write_requirement="excluded"/>
      
      <!--Client Characteristic Configuration-->
      <descriptor id="client_characteristic_configuration_7" name="Client Characteristic Configuration" sourceId="org.bluetooth.descriptor.gatt.client_characteristic_configuration" uuid="2902">
        <properties read="true" read_requirement="mandatory" write="true" write_requirement="mandatory"/>
        <value length="2" type="hex" variable_length="false"/>
      </descriptor>
    </characteristic>
    
    <!--Alert Notification Control Point-->
    <characteristic id="alert_notification_control_point" name="Alert Notification Control Point" sourceId="org.bluetooth.characteristic.alert_notification_control_point" uuid="2A44">
      <informativeText>Abstract:  Control point of the Alert Notification server.  Client can write the command here to request the several functions toward the server.  Summary:  The 1st octet value of the characteristic is an unsigned 8 bit integer that has a fixed point exponent of 0.  The 1st octet value expresses the command ID that defines the server's actions. 		 The 2nd octet value of the characteristic is an "Alert Category ID" format.  This octet shows the target category that the command ID applies for.  Examples:  The data 0x02 0x01 interprets "Disable New Incoming Notification for Email Category".  </informativeText>
      <value length="2" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="true" write_no_response="false" write_no_response_requirement="excluded" write_requirement="mandatory"/>
    </characteristic>
  </service>
  
  <!--Immediate Alert-->
  <service advertise="false" id="immediate_alert" name="Immediate Alert" requirement="mandatory" sourceId="org.bluetooth.service.immediate_alert" type="primary" uuid="1802">
    <informativeText>Abstract:  This service exposes a control point to allow a peer device to cause the device to immediately alert.  Summary:  The Immediate Alert service is instantiated as a Primary Service.     There is only one instance of the Immediate Alert service on a device.     There is only one instance of the Alert Level characteristic in an Immediate Alert service.     This alert continues until one of following conditions occurs:     - An implementation specific timeout     - User interaction on this device     - A new alert level is written     - The physical link is disconnected  Examples:  If the written alert level is "No Alert", no alerting is done on this device.  If the written alert level is "Mild Alert", the device alerts.  If the written alert level is "High Alert", the device alerts in the strongest possible way.  </informativeText>
    
    <!--Alert Level-->
    <characteristic id="alert_level" name="Alert Level" sourceId="org.bluetooth.characteristic.alert_level" uuid="2A06">
      <informativeText>Abstract:  The level of an alert a device is to sound. If this level is changed while the alert is being sounded, the new level should take effect.  Summary:  The value of the characteristic shall be an unsigned 8 bit integer that has a fixed point exponent of 0.     The Alert Level characteristic defines the level of alert, and is one of the following three values:     - Value 0, meaning "No Alert"     - Value 1, meaning "Mild Alert"     - Value 2, meaning "High Alert"  Examples:  The value 0x01 is interpreted as "Mild Alert"  </informativeText>
      <value length="1" type="hex" variable_length="false"/>
      <properties indicate="false" indicate_requirement="excluded" notify="false" notify_requirement="excluded" read="false" read_requirement="excluded" reliable_write="false" reliable_write_requirement="excluded" write="false" write_no_response="true" write_no_response_requirement="mandatory" write_requirement="excluded"/>
    </characteristic>
  </service>
</gatt>
